{"version":3,"sources":["components/Hero/Hero.tsx","components/MovieDetail/MovieDetail.tsx","components/MovieTable/MovieTable.tsx","components/Pagination/Pagination.tsx","App.tsx","hooks/useMovieDetail/useMovieDetail.ts","index.tsx"],"names":["useStyles","makeStyles","img","backgroundSize","backgroundColor","backgroundRepeat","backgroundPosition","minHeight","alignItems","display","justifyContent","position","top","width","name","Hero","props","classes","backgroundImage","Box","className","style","children","container","height","contentContainer","borderRadius","padding","border","poster","detailTitle","fontWeight","fontSize","detailLabel","detailContent","detailOverview","MovieDetail","movie","Grid","item","md","title","tagline","xs","Date","release_date","toLocaleDateString","year","month","day","production_companies","map","co","join","overview","Hidden","smDown","justify","poster_path","row","borderBottom","cursor","activeRow","headerRow","margin","MovieTable","movieList","spacing","isActiveRow","id","currentMovieId","key","clsx","onClick","updateMovie","onRowClick","alt","src","activePage","color","Pagination","totalPages","currentPageId","pagination","Array","from","length","_","i","p","isCurrentPage","Button","setPageId","flexDirection","chevron","textDecoration","textShadow","App","useState","setMovieList","setTotalPages","pageId","movieDetail","movieId","setMovieId","setMovieDetail","useEffect","a","url","axios","get","response","data","fetchMovie","state","actions","useMovieDetail","isPreviousDirection","setIsPreviousDirection","getCurrentIndex","findIndex","m","responseType","headers","Accept","page","total_pages","results","fetchMovieList","firstResult","splice","lastResult","nextResult","heroPath","backdrop_path","currentMovieIndex","isPrevVisible","isNextVisible","Container","disableGutters","maxWidth","currentIndex","prevIndex","undefined","prevMovie","nextIndex","nextMovie","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f14ca644.chunk.js","sourcesContent":["import { Box, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface IProps {\n  backgroundImage: string;\n}\n\nconst useStyles = makeStyles(\n  {\n    img: {\n      backgroundSize: \"cover\",\n      backgroundColor: \"#ffffff\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundPosition: \"center\",\n      minHeight: \"375px\",\n      alignItems: \"center\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      position: \"sticky\",\n      top: 0,\n      width: \"100%\",\n      \"-webkit-transition\": \"background-image 1s\",\n    },\n  },\n  { name: \"hero\" }\n);\n\nexport const Hero: React.FC<IProps> = (props) => {\n  const classes = useStyles(props.backgroundImage);\n\n  return (\n    <Box\n      className={classes.img}\n      style={{ backgroundImage: `url(${props.backgroundImage}` }}\n    >\n      {props.children}\n    </Box>\n  );\n};\n","import { Box, Grid, Hidden, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport { IMovieDetail } from \"../../model/IMovieDetail\";\n\ninterface IProps {\n  movie: IMovieDetail;\n}\n\nconst useStyles = makeStyles({\n  container: {\n    height: \"100%\",\n    display: \"flex\",\n    minHeight: \"300px\",\n  },\n  contentContainer: {\n    borderRadius: \"1rem\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: `rgba(255,255,255,0.85)`,\n    padding: \"2rem\",\n    border: \"1px solid #ccc\",\n  },\n  poster: {\n    \"-webkit-transition\": \"background-image .5s\",\n    backgroundSize: \"cover\",\n    width: \"185px\",\n    backgroundRepeat: \"no-repeat\",\n    height: \"100%\",\n  },\n  detailTitle: {\n    fontWeight: \"bold\",\n    fontSize: \"2rem\",\n  },\n  detailLabel: {\n    fontWeight: \"bold\",\n    fontSize: \"0.8rem\",\n  },\n  detailContent: {\n    fontSize: \"0.8rem\",\n  },\n  detailOverview: {\n    padding: \"1rem 0\",\n  },\n});\n\nexport const MovieDetail: React.FC<IProps> = (props) => {\n  const classes = useStyles();\n  const { movie } = props;\n\n  return movie ? (\n    <div className={classes.container}>\n      <Box className={classes.contentContainer}>\n        <Grid container>\n          {renderDetails()}\n          {renderPoster()}\n        </Grid>\n      </Box>\n    </div>\n  ) : null;\n\n  function renderPoster() {\n    return (\n      <Hidden smDown>\n        <Grid container item md={4} justify=\"flex-end\">\n          <div\n            className={classes.poster}\n            style={{\n              backgroundImage: `url(https://image.tmdb.org/t/p/w185/${movie.poster_path})`,\n            }}\n          ></div>\n        </Grid>\n      </Hidden>\n    );\n  }\n\n  function renderDetails() {\n    return (\n      <Grid container item md={8}>\n        <Grid item md={12} className={classes.detailTitle}>\n          {movie.title}\n        </Grid>\n        <Grid container item>\n          {movie.tagline && (\n            <>\n              <Grid item md={4} xs={12} className={classes.detailLabel}>\n                Tagline:\n              </Grid>\n              <Grid item md={6} xs={12} className={classes.detailContent}>\n                {movie.tagline}\n              </Grid>\n            </>\n          )}\n\n          <Grid item md={4} xs={12} className={classes.detailLabel}>\n            Release Date:\n          </Grid>\n          <Grid item md={6} xs={12} className={classes.detailContent}>\n            {new Date(movie.release_date).toLocaleDateString(\"en-us\", {\n              year: \"numeric\",\n              month: \"long\",\n              day: \"numeric\",\n            })}\n          </Grid>\n          <Grid item md={4} xs={12} className={classes.detailLabel}>\n            Companies:\n          </Grid>\n          <Grid item md={6} xs={12} className={classes.detailContent}>\n            {movie.production_companies\n              .map((co) => {\n                return co.name;\n              })\n              .join(\", \")}\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12} className={classes.detailOverview}>\n          {movie.overview}\n        </Grid>\n      </Grid>\n    );\n  }\n};\n","import { Box, Grid, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport { IMovie } from \"../../model/IMovie\";\n\nimport clsx from \"clsx\";\n\ninterface IProps {\n  movieList: Array<IMovie>;\n  updateMovie: (movieId: number) => void;\n  currentMovieId?: number;\n}\n\nconst useStyles = makeStyles({\n  row: {\n    borderBottom: \"1px solid lightgrey\",\n    cursor: \"pointer\",\n  },\n  activeRow: {\n    backgroundColor: \"rgba(255, 165, 0,0.4)\",\n  },\n  headerRow: {\n    fontWeight: \"bold\",\n    margin: \"2rem 0 1rem\",\n  },\n});\n\nexport const MovieTable: React.FC<IProps> = (props) => {\n  const { movieList } = props;\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid container item className={classes.headerRow}>\n          <Grid item xs={8}>\n            Title\n          </Grid>\n          <Grid item xs={4}>\n            Release Date\n          </Grid>\n        </Grid>\n        {renderRows()}\n      </Grid>\n    </>\n  );\n\n  function renderRows() {\n    const movieRows = movieList.map((movie: IMovie) => {\n      const isActiveRow = movie.id === props.currentMovieId;\n      return (\n        <Grid\n          container\n          item\n          key={movie.id}\n          className={clsx(classes.row, {\n            [classes.activeRow]: isActiveRow,\n          })}\n          onClick={() => {\n            onRowClick(movie);\n          }}\n        >\n          <Grid item xs={1}>\n            {movie.poster_path && (\n              <img\n                width=\"40\"\n                alt={movie.title}\n                src={`https://image.tmdb.org/t/p/w92/${movie.poster_path}`}\n              />\n            )}\n          </Grid>\n          <Grid item xs={7}>\n            <Box padding=\"1rem\">{movie.title}</Box>\n          </Grid>\n          <Grid item xs={4}>\n            <Box padding=\"1rem 0\">\n              {new Date(movie.release_date).toLocaleDateString(\"en-us\", {\n                year: \"numeric\",\n                month: \"long\",\n                day: \"numeric\",\n              })}\n            </Box>\n          </Grid>\n        </Grid>\n      );\n    });\n\n    return movieRows;\n  }\n\n  function onRowClick(movie: IMovie) {\n    props.updateMovie(movie.id);\n  }\n};\n","import { Box, Button, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface IProps {\n  currentPageId: number;\n  totalPages: number;\n  setPageId: (pageId: number) => void;\n}\n\nconst useStyles = makeStyles({\n  activePage: {\n    fontWeight: \"bold\",\n    color: \"orange\",\n  },\n});\n\nexport const Pagination: React.FC<IProps> = (props) => {\n  const { totalPages, currentPageId } = props;\n  const classes = useStyles();\n  const array = Array.from({ length: totalPages }, (_, i) => i + 1);\n\n  const pagination = array.map((p) => {\n    const isCurrentPage = currentPageId === p;\n    return (\n      <Button\n        key={p}\n        onClick={() => {\n          props.setPageId(p);\n        }}\n        className={isCurrentPage ? classes.activePage : \"\"}\n      >\n        {p}\n      </Button>\n    );\n  });\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      padding=\"2rem\"\n      flexDirection=\"row\"\n    >\n      {pagination}\n    </Box>\n  );\n};\n","import { Button, Container, makeStyles } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Hero } from \"./components/Hero/Hero\";\nimport { MovieDetail } from \"./components/MovieDetail/MovieDetail\";\nimport { MovieTable } from \"./components/MovieTable/MovieTable\";\n\nimport axios from \"axios\";\nimport { IMovieServerResponse } from \"./model/IMovieServerResponse\";\nimport { useMovieDetail } from \"./hooks/useMovieDetail/useMovieDetail\";\n\nimport { IMovie } from \"./model/IMovie\";\nimport { Pagination } from \"./components/Pagination/Pagination\";\n\nconst useStyles = makeStyles({\n  chevron: {\n    color: \"#ccc\",\n    textDecoration: \"none\",\n    textShadow: \"2px 2px 2px #000\",\n    fontSize: \"3rem\",\n  },\n});\n\nfunction App() {\n  const [movieList, setMovieList] = useState<Array<IMovie>>([]);\n  const [totalPages, setTotalPages] = useState<number>(0);\n  const [pageId, setPageId] = useState<number>(1);\n  const movieDetail = useMovieDetail();\n  const classes = useStyles();\n  const [isPreviousDirection, setIsPreviousDirection] = useState<boolean>(\n    false\n  );\n\n  useEffect(() => {\n    const fetchMovieList = async () => {\n      if (pageId) {\n        const url = `https://api.themoviedb.org/3/company/3-pixar-animation-studios/movies?api_key=51b2550f677015fea635590d341a4cad&page=${pageId}`;\n        const response = await axios.get<IMovieServerResponse>(url, {\n          responseType: \"json\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json;charset=UTF-8\",\n          },\n        });\n\n        setPageId(response.data.page);\n        setTotalPages(response.data.total_pages);\n        setMovieList(response.data.results);\n      }\n    };\n\n    fetchMovieList();\n  }, [pageId]);\n\n  useEffect(() => {\n    if (!movieDetail.state.movieId && movieList.length > 0) {\n      const [firstResult] = movieList;\n      const [lastResult] = [...movieList].splice(-1);\n      const nextResult = isPreviousDirection ? lastResult : firstResult;\n      movieDetail.actions.setMovieId(nextResult.id);\n    }\n  }, [\n    isPreviousDirection,\n    movieDetail.actions,\n    movieDetail.state.movieId,\n    movieList,\n  ]);\n\n  function onPrev() {\n    setIsPreviousDirection(true);\n    const currentIndex = getCurrentIndex();\n    const prevIndex = currentIndex === 0 ? currentIndex : currentIndex - 1;\n\n    if (currentIndex === 0) {\n      setMovieList([]);\n      setPageId(pageId - 1);\n      movieDetail.actions.setMovieId(undefined);\n    } else {\n      const prevMovie = movieList[prevIndex];\n      movieDetail.actions.setMovieId(prevMovie?.id);\n    }\n  }\n  function onNext() {\n    setIsPreviousDirection(false);\n    const currentIndex = getCurrentIndex();\n    const nextIndex =\n      currentIndex >= movieList.length - 1 ? currentIndex : currentIndex + 1;\n\n    if (currentIndex >= movieList.length - 1) {\n      setMovieList([]);\n      setPageId(pageId + 1);\n      movieDetail.actions.setMovieId(undefined);\n    } else {\n      const nextMovie = movieList[nextIndex];\n      movieDetail.actions.setMovieId(nextMovie.id);\n    }\n  }\n\n  function getCurrentIndex() {\n    const currentIndex =\n      movieList.findIndex((m) => {\n        return m.id === movieDetail.state.movieId;\n      }) ?? 0;\n    return currentIndex;\n  }\n\n  if (movieList.length > 0 && movieDetail.state.movieDetail) {\n    const heroPath = `https://image.tmdb.org/t/p/w1280/${movieDetail.state.movieDetail.backdrop_path}`;\n    const currentMovieIndex = movieList.findIndex((m) => {\n      return m.id === movieDetail.state.movieId;\n    });\n    const isPrevVisible = !(currentMovieIndex === 0 && pageId === 1);\n    const isNextVisible = !(\n      pageId === totalPages && currentMovieIndex === movieList.length - 1\n    );\n\n    return (\n      <>\n        <Hero backgroundImage={heroPath}>\n          <Container\n            disableGutters={true}\n            maxWidth=\"md\"\n            style={{ display: \"flex\", flexDirection: \"row\" }}\n          >\n            {isPrevVisible && (\n              <Button onClick={onPrev} className={classes.chevron}>\n                <i className=\"fa fa-chevron-left\"></i>\n              </Button>\n            )}\n            <MovieDetail movie={movieDetail.state.movieDetail} />\n            {isNextVisible && (\n              <Button onClick={onNext} className={classes.chevron}>\n                <i className=\"fa fa-chevron-right\"></i>\n              </Button>\n            )}\n          </Container>\n        </Hero>\n        <Container maxWidth=\"sm\">\n          <MovieTable\n            currentMovieId={movieDetail.state.movieId}\n            movieList={movieList}\n            updateMovie={movieDetail.actions.setMovieId}\n          />\n          <Pagination\n            currentPageId={pageId}\n            setPageId={setPageId}\n            totalPages={totalPages}\n          />\n        </Container>\n      </>\n    );\n  }\n\n  return null;\n}\n\nexport default App;\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { IMovieDetail } from \"../../model/IMovieDetail\";\n\nexport function useMovieDetail() {\n  const [movieId, setMovieId] = useState<number>();\n  const [movieDetail, setMovieDetail] = useState<IMovieDetail>();\n\n  useEffect(() => {\n    async function fetchMovie() {\n      if (movieId) {\n        const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=51b2550f677015fea635590d341a4cad`;\n        const response = await axios.get(url);\n        setMovieDetail(response.data);\n      }\n    }\n    fetchMovie();\n  }, [movieId]);\n\n  return {\n    state: {\n      movieId,\n      movieDetail,\n    },\n    actions: {\n      setMovieId,\n    },\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}